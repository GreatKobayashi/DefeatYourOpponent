@page "/"
@using DefeatYourOpponent.Domain.Entities.Commons
@using DefeatYourOpponent.Domain.Logics
@using DefeatYourOpponent.Domain.Repositories
@rendermode InteractiveServer
@inject IGameResultRepository GameResultRepository

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.
<form @onsubmit=SerchBySummonerName class="input-group mb-3">
    <input class="form-control" @bind="_enteredSummonerName" placeholder="Type Summoner Name !" />
    <div class="input-group-append">
        <button class="btn btn-primary" type="button" @onclick="SerchBySummonerName">GO</button>
    </div>
</form>

<table>
    <tr>
        <th width="100px">Queue</th>
        <th width="100px">Champion</th>
        <th width="100px">Result</th>
    </tr>
    @foreach (var game in _gameResultEntities)
    {
        <tr>
            <td>@RiotDataConverter.QueueIdToString(game.Queue)</td>
            <td><img src=@GetChampionImagePath(game.Champion) class="rounded-circle ms-2" width="50"></td>
            <td>@RiotDataConverter.WinToString(game.Win)</td>
        </tr>
    }
</table>

@code{
    private List<GameResultEntity> _gameResultEntities = new List<GameResultEntity>();
    private string? _enteredSummonerName;
    private string _championImagesDirectoryPath = "images/champion/tiles/";

    private async void SerchBySummonerName()
    {
        var tags = new Dictionary<string, string>();
        if (!string.IsNullOrEmpty(_enteredSummonerName))
        {
            _gameResultEntities = await GameResultRepository.GetGameResultEntitiesAsync(_enteredSummonerName, tags);
        }
        StateHasChanged();
    }

    private string GetChampionImagePath(string championName)
    {
        return $"{_championImagesDirectoryPath}{championName}_0.jpg";
    }
}